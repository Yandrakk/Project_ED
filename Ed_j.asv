clear all

% Variables :
k = physconst('Boltzman'); 
T = 300;
W = 4.5*10^(-6); %m
Wn_plus = 0.01e-6; %m
Wn = 0.9e-6; %m
Wn_range = [0.2e-6 : 1e-8 : 2.5e-6]; %wn range pour tracer photocurrent density en fonction de Wn
e = 1.6*10^(-19);
lambda = [0.24: 0.01 : 1] ; % en µ
lambda_fixe = 0.4; % en µ on prend celle qui donne le plus de courant 
range_ndplus = [10^22 : 10^20 : 10^26];
Nd_plus = 2e25 ; % m-3 
Nd = 2e22; %m-3
% Nd_plus = 8*10^24; %m-3

Lp_plus = 0.32e-6; %m    diffusion length of minority carriers in n+zone variation of minority-carrier diffusion length with carier concentration in GaAs liquid-phase epitaxial layers
Lp = 2e-6; %m            diffusion length of minority carriers in n zone
Ln =  20e-6; %m Dl of electron in n zone (problem no data  :s) 
epsilon = 12.9 *8.8541878176e-12 ; 
Dp_plus = 400e-4 * k*T/e; %µ * k*T./e
Dp = Dp_plus; % most likely we don't care about doping 
Sp = 3e3; % m*s-1
Sp_plus = 3e3; 
Sb = 7.7e4 ; surface recombi
syms Vh ; 
S = solve (e*Vh /(k*T) + log((Nd/Nd_plus) + 0.5*(e*Vh/(k*T))^2) == 0, Vh); %calculates potential across HLJ
Wa = sqrt(2*epsilon*k*T./(e^2*Nd))*atan(e*S/(sqrt(2)*k*T)*sqrt(Nd_plus/Nd)); % calculates vpa with previous Vh

Senn_plus = (Nd./range_ndplus) * (Dp_plus / Lp_plus) * ((Sp * Lp_plus / Dp_plus )+ tanh(Wn_plus / Lp_plus))/(1+ (Sp*Lp_plus/Dp_plus)* tanh(Wn_plus/Lp_plus));
Sen_plus_n = (range_ndplus./Nd)*(Dp/Lp)*coth(Wn/Ln);
Fh_1 = 1./(1+(Senn_plus./Sen_plus_n).*(range_ndplus./Nd));
Fh_1_corrected= Fh_1 *sech(Wn/Lp);
figure;
semilogx(range_ndplus,Fh_1,range_ndplus,Fh_1_corrected);
f_lambda = arrayfun(@f, lambda); 
a_lambda = arrayfun(@a, lambda);
 
% Photocurrent density en fonction de lambda   

Tau = f_lambda.*((1-0.05)*e*Lp_plus*a_lambda)./(-1+(a_lambda*Lp_plus).^2); % R = 0.05, black material, as your soul
Jn0_plus_x1_lambda = Tau .* ((-a_lambda*Lp_plus).*exp(-a_lambda*Wn_plus) + (((Sp*Lp_plus/Dp_plus) + a_lambda*Lp_plus - exp(-a_lambda*Wn_plus)*((Sp*Lp_plus*cosh(Wn_plus/Lp_plus)/Dp_plus) + sinh(Wn_plus/Lp_plus)))/((Sp*Lp_plus*sinh(Wn_plus/Lp_plus)/Dp_plus) + cosh(Wn_plus/Lp_plus))));
figure;
plot(lambda,Jn0_plus_x1_lambda);

%Photocurent density en fonction de Wn
Senn_plus_Wn = (Nd/Nd_plus) * (Dp_plus / Lp_plus) * ((Sp * Lp_plus / Dp_plus )+ tanh(Wn_plus / Lp_plus))/(1+ (Sp*Lp_plus/Dp_plus)* tanh(Wn_plus/Lp_plus)); %ne depend pas de Wn donc blc
Sen_plus_n_Wn = (Nd_plus/Nd)*(Dp/Lp)*coth(Wn_range/Ln); %depend de Wn donc matrice
Fh_1_Wn = 1./(1+(Senn_plus_Wn./Sen_plus_n_Wn).*(Nd_plus/Nd));
Fh_1_corrected_Wn= Fh_1_Wn .*sech(Wn_range./Lp); %matrice
Tau_lambda_fixe = f(lambda_fixe)*((1-0.05)*e*Lp_plus*a(lambda_fixe))/(-1+(a(lambda_fixe)*Lp_plus)^2); 
Jn0_plus_x1_Wn = Fh_1_corrected_Wn.*(Tau_lambda_fixe * ((-a(lambda_fixe)*Lp_plus).*exp(-a(lambda_fixe)*Wn_plus) + (((Sp*Lp_plus/Dp_plus) + a(lambda_fixe)*Lp_plus - exp(-a(lambda_fixe)*Wn_plus)*((Sp*Lp_plus*cosh(Wn_plus/Lp_plus)/Dp_plus) + sinh(Wn_plus/Lp_plus)))/((Sp*Lp_plus*sinh(Wn_plus/Lp_plus)/Dp_plus) + cosh(Wn_plus/Lp_plus)))));
J_Wa_x3_Wn = e*f(lambda_fixe)*(1-0.05)*exp(-a(lambda_fixe)*Wn_plus)*(1-exp(-a(lambda_fixe)*Wa))*sech(Wn_range/Lp);
figure;
J_p_Wn = -k1*Lp*a(lambda_fixe)*exp(-a(lambda_fixe)*Wn_range) + (k1/((Senn_plus_Wn*Lp/Dp)*sinh(Wn_range/Lp)+cosh(Wn_range/Lp)))*((Senn_plus_Wn*Lp/Dp)+ a(lambda_fixe)*Lp - exp(-a(lambda_fixe)*Wn_range)*((Senn_plus_Wn*Lp/Dp)*cosh(Wn_range/Lp) + sinh(Wn_range/Lp))); % photocurrent generated by p layer calculated at x3
J_n_Wn = k2 * a(lambda_fixe) * Ln - (k2/((Sb
plot(Wn_range, Jn0_plus_x1_Wn);
figure;
plot(Wn_range, J_Wa_x3_Wn);


%Creating functions 









